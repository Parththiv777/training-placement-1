#Given an array of positive integers nums and a positive integer target, return the minimal length of a subarray whose sum is greater than or equal to target. If there is no such subarray, return 0 instead.

# Input: target = 7, nums = [2,3,1,2,4,3]
# Output: 2

class Solution(object):
    def minSubArrayLen(self, target, nums):
        """
        :type target: int
        :type nums: List[int]
        :rtype: int
        """
        l = 0
        r = 1
        s = 0
        min_len = 0

        while r <= len(nums):
            s += nums[r-1]
            while s - nums[l] >= target:
                s -= nums[l]
                l += 1
            if s >= target and (r - l < min_len or min_len == 0):
                min_len = r - l
            r += 1
        return min_len
        
